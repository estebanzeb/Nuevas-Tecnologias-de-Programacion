npx create-react-app  cons-api-mongo-flask-reactjs

import React from 'react';
import {toast} from 'react-toastify';
import 'react-toastify/dist/ReactToastify.css';

toast.configure();
export default class App extends React.Component{
  constructor(props){
    super(props);
    this.state = {
      _id:'',
      name:'',
      description:'',
      stock:'',
      products:[]
    };
    this.handleChange = this.handleChange.bind(this);
    this.addProduct = this.addProduct.bind(this);
  }

  handleChange(e){
    const { name, value} = e.target;
    this.setState({
      [name]: value
    });
  }

  refreshProduct(){
    const apiUrl = `http://localhost:3500/products`;
    fetch(apiUrl)
    .then((response) => response.json())
    .then((data) =>{
        this.setState({products:data});
        console.log(this.state.products);
    })
  }

  componentDidMount(){
    this.refreshProduct();
  }

  addProduct(e){
    e.preventDefault();
    if (this.state._id){
      fetch(`http://localhost:3500/products/${this.state._id.$oid}`,{
        method:'PUT',
        body: JSON.stringify({
          name: this.state.name,
          description: this.state.description,
          stock:this.state.stock
        }),
        headers:{
          'Accept': 'application/json',
          'Content-Type': 'application/json'
        }
      })
      .then(res => res.json())
      .then(data => {
        this.setState({_id:'',name:'', description:'', stock:''});
        toast.success("Updated/Saved",{
          position: toast.POSITION.BOTTOM_RIGHT,
          autoClose:1000
        })
        this.refreshProduct();
      });
      
    }
    else{
      fetch(`http://localhost:3500/products`,{
        method:'POST',
        body:JSON.stringify(this.state),
        headers:{
          'Accept': 'application/json',
          'Content-Type': 'application/json'
        }
      })
      .then(res => res.json())
      .then(data => {
        this.setState({name:'',description:'', stock:''});
        toast.success("Updated/Saved",{
          position: toast.POSITION.BOTTOM_RIGHT,
          autoClose:1000
        })
        this.refreshProduct();
      });
    }
  }

  deleteProduct(_id){
    if(window.confirm('Est� seguro de eliminar el producto')){
      fetch(`http://localhost:3500/products/${_id}`,{
        method:'DELETE',
        headers:{
          'Accept': 'application/json',
          'Content-Type': 'application/json'
        }
      })
      .then(res=>res.json())
      .then(data =>{
        toast.success("Producto borrado �xitosamente...",{
          position: toast.POSITION.TOP_LEFT,
          autoClose:2000
        })
        this.refreshProduct();
      });
    }
  }

  editProduct(_id){
    fetch(`http://localhost:3500/products/${_id}`)
    .then(res => res.json())
    .then(data =>{
      this.setState({
        name:data.name,
        description:data.description,
        stock:data.stock,
        _id:data._id
      });
    });
  }

  render(){
    return (
      <div className="container">
        <h1 style={{color:'green'}}>Actualizaci�n de Productos</h1>
        {/* Formulario*/}
        <form onSubmit={this.addProduct}>
          <div className="mb-3">
            <label htmlFor="name">Nombre</label>
            <input type="text" name="name" className="form-control" 
            onChange={this.handleChange} value={this.state.name}
            placeholder="Nombre" autoFocus
            ></input>

          </div>
          <div className="mb-3">
            <label htmlFor="name">Descripci�n</label>
            <input type="text" name="description" className="form-control" 
            onChange={this.handleChange} value={this.state.description}
            placeholder="Descripci�n"></input>

          </div>
          <div className="mb-3">
            <label htmlFor="name">Existencia</label>
            <input type="number" name="stock" className="form-control" 
            onChange={this.handleChange} value={this.state.stock}
            placeholder="Existencia"></input>

          </div>
          <button type="submit" className="btn btn-primary">Guardar</button>
        </form>
        {/* Fin formulario*/}
        <table className='table table-hover'>
          <thead>
            <tr>
              <th>Id</th>
              <th>Nombre</th>
              <th>Descripci�n</th>
              <th>Existencia</th>
              <th>Acci�n</th>
            </tr>
          </thead>
          <tbody>
            {
              this.state.products.map(product =>{
                return(
                  <tr key={JSON.stringify(product._id.$oid)}>
                    <td>{JSON.stringify(product._id.$oid)}</td>
                    <td>{product.name}</td>
                    <td>{product.description}</td>
                    <td>{product.stock}</td>
                    <td>
                      <button onClick={()=>this.editProduct(product._id.$oid)} className="btn btn-primary" style={{margin: '4px'}}>
                      Editar
                      </button>
                      <button onClick={()=>this.deleteProduct(product._id.$oid)} className="btn btn-danger" style={{margin: '4px'}}>
                      Eliminar
                      </button>
                    </td>
                  </tr>
                )
              })
            }
          </tbody>
        </table>

      </div>
    );
  }
}